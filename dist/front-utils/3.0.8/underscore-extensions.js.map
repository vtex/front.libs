{"version":3,"sources":["underscore-extensions.js"],"names":["Utils","utils","__bind","fn","me","apply","arguments","__hasProp","hasOwnProperty","__slice","slice","this","_extend","_getDecimalDigits","_getThousandsSeparator","_getDecimalSeparator","_getStartsWithCurrency","_getCurrency","unFlattenObj","flattenObj","mapObj","hash","spacesToHyphens","sanitize","plainChars","maskInfo","maskString","capitalizeSentence","capitalize","capitalizeWord","dateFromISO8601","urlParams","getCookieValue","readCookie","pad","formatCurrency","prototype","value","options","decimalPart","defaults","opts","wholePart","_ref","decimalSeparator","thousandsSeparator","absolute","decimalPlaces","toFixed","split","replace","intAsCurrency","currencySymbol","startsWithCurrency","str","max","toadd","char","position","charAt","Array","length","join","name","ARRcookies","key","pair","_i","_len","document","cookie","substr","indexOf","unescape","subcookie","subcookies","decode","match","params","plus","query","search","s","decodeURIComponent","_error","window","location","substring","exec","isostr","part1","parts","Date","word","toUpperCase","sentence","newWords","oldWords","toLowerCase","_results","push","call","mask","fixedChars","applyMask","argString","digitMask","fixedCharsRegex","letterMask","String","RegExp","valueArray","maskArray","fixed","i","maskedValueArray","noMatchDigit","noMatchLetter","test","splice","info","maskRegex","maskText","plain","regex","specialChars","charcode","hashed","charCodeAt","obj","f","k","obj2","v","target","prefix","_","reduce","_this","result","isObject","keys","current","limit","partitions","each","index","padStr","padding","reverse","dateFormat","date","getDate","getMonth","getFullYear","dateFormatUS","_ref1","vtex","i18n","getCurrency","_ref2","_ref3","getStartsWithCurrency","getDecimalSeparator","getThousandsSeparator","getDecimalDigits","prop","source","sources","mixin","extend"],"mappings":";CAAA,WACE,GAAIA,OAAOC,MACTC,OAAS,SAASC,GAAIC,IAAK,MAAO,YAAY,MAAOD,IAAGE,MAAMD,GAAIE,aAClEC,aAAeC,eACfC,WAAaC,KAEfV,OAAQ,WACN,QAASA,SACPW,KAAKC,QAAUV,OAAOS,KAAKC,QAASD,MACpCA,KAAKE,kBAAoBX,OAAOS,KAAKE,kBAAmBF,MACxDA,KAAKG,uBAAyBZ,OAAOS,KAAKG,uBAAwBH,MAClEA,KAAKI,qBAAuBb,OAAOS,KAAKI,qBAAsBJ,MAC9DA,KAAKK,uBAAyBd,OAAOS,KAAKK,uBAAwBL,MAClEA,KAAKM,aAAef,OAAOS,KAAKM,aAAcN,MAC9CA,KAAKO,aAAehB,OAAOS,KAAKO,aAAcP,MAC9CA,KAAKQ,WAAajB,OAAOS,KAAKQ,WAAYR,MAC1CA,KAAKS,OAASlB,OAAOS,KAAKS,OAAQT,MAClCA,KAAKU,KAAOnB,OAAOS,KAAKU,KAAMV,MAC9BA,KAAKW,gBAAkBpB,OAAOS,KAAKW,gBAAiBX,MACpDA,KAAKY,SAAWrB,OAAOS,KAAKY,SAAUZ,MACtCA,KAAKa,WAAatB,OAAOS,KAAKa,WAAYb,MAC1CA,KAAKc,SAAWvB,OAAOS,KAAKc,SAAUd,MACtCA,KAAKe,WAAaxB,OAAOS,KAAKe,WAAYf,MAC1CA,KAAKgB,mBAAqBzB,OAAOS,KAAKgB,mBAAoBhB,MAC1DA,KAAKiB,WAAa1B,OAAOS,KAAKiB,WAAYjB,MAC1CA,KAAKkB,eAAiB3B,OAAOS,KAAKkB,eAAgBlB,MAClDA,KAAKmB,gBAAkB5B,OAAOS,KAAKmB,gBAAiBnB,MACpDA,KAAKoB,UAAY7B,OAAOS,KAAKoB,UAAWpB,MACxCA,KAAKqB,eAAiB9B,OAAOS,KAAKqB,eAAgBrB,MAClDA,KAAKsB,WAAa/B,OAAOS,KAAKsB,WAAYtB,MAC1CA,KAAKuB,IAAMhC,OAAOS,KAAKuB,IAAKvB,MAC5BA,KAAKwB,eAAiBjC,OAAOS,KAAKwB,eAAgBxB,MA0kBpD,MAljBAX,OAAMoC,UAAUD,eAAiB,SAASE,MAAOC,SAC/C,GAAIC,aAAaC,SAAUC,KAAMC,UAAWC,IAc5C,OAbAH,WACEI,iBAAkBjC,KAAKI,uBACvB8B,mBAAoBlC,KAAKG,yBACzBgC,UAAU,EACVC,cAAepC,KAAKE,qBAEtB4B,KAAO9B,KAAKC,QAAQ4B,SAAUF,SAC1BG,KAAKK,UAAYT,MAAQ,IAC3BA,OAASA,OAEXA,MAAQA,MAAMW,QAAQP,KAAKM,eAC3BJ,KAAON,MAAMY,MAAM,KAAMP,UAAYC,KAAK,GAAIJ,YAAcI,KAAK,GACjED,UAAYA,UAAUQ,QAAQ,wBAAyBT,KAAKI,oBACxDJ,KAAKM,cAAgB,EAChBL,UAAYD,KAAKG,iBAAmBL,YAEpCG,WAIX1C,MAAMoC,UAAUe,cAAgB,SAASd,MAAOC,SAC9C,GAAIc,gBAAgBC,kBAGpB,OAFAD,gBAAiBd,SAAWA,QAAQc,eAAiBd,QAAQc,eAAiBzC,KAAKM,eACnFoC,mBAAqBf,SAAWA,QAAQc,eAAiBd,QAAQc,eAAiBzC,KAAKK,yBACnFqC,mBACKD,eAAiBzC,KAAKwB,eAAeE,MAAQ,IAAKC,SAEpD3B,KAAKwB,eAAeE,MAAQ,IAAKC,SAAW,IAAMc,gBAuB3DpD,MAAMoC,UAAUF,IAAM,SAASoB,IAAKC,IAAKjB,SACvC,GAAIE,UAAUC,KAAMe,KASpB,OARAhB,WACEiB,KAAM,IACNC,SAAU,QAEZjB,KAAO9B,KAAKC,QAAQ4B,SAAUF,SAC9BG,KAAKgB,KAAOhB,KAAKgB,KAAKE,OAAO,GAC7BL,KAAY,GACZE,MAAQI,MAAML,IAAMD,IAAIO,OAAS,GAAGC,KAAKrB,KAAKgB,MACxB,UAAlBhB,KAAKiB,SACAJ,IAAME,MAENA,MAAQF,KAmBnBtD,MAAMoC,UAAUH,WAAa,SAAS8B,MACpC,GAAIC,YAAYC,IAAKC,KAAM7B,MAAO8B,GAAIC,IAEtC,KADAJ,WAAaK,SAASC,OAAOrB,MAAM,KAC9BkB,GAAK,EAAGC,KAAOJ,WAAWH,OAAQM,GAAKC,KAAMD,KAIhD,GAHAD,KAAOF,WAAWG,IAClBF,IAAMC,KAAKK,OAAO,EAAGL,KAAKM,QAAQ,MAAMtB,QAAQ,aAAc,IAC9Db,MAAQ6B,KAAKK,OAAOL,KAAKM,QAAQ,KAAO,GACpCP,MAAQF,KACV,MAAOU,UAASpC,QAuBtBrC,MAAMoC,UAAUJ,eAAiB,SAASsC,OAAQP,MAChD,GAAIE,KAAKS,UAAWC,WAAYtC,MAAO8B,GAAIC,IAE3C,KADAO,WAAaL,OAAOrB,MAAM,KACrBkB,GAAK,EAAGC,KAAOO,WAAWd,OAAQM,GAAKC,KAAMD,KAIhD,GAHAO,UAAYC,WAAWR,IACvBF,IAAMS,UAAUH,OAAO,EAAGG,UAAUF,QAAQ,MAC5CnC,MAAQqC,UAAUH,OAAOG,UAAUF,QAAQ,KAAO,GAC9CP,MAAQF,KACV,MAAOU,UAASpC,QAkBtBrC,MAAMoC,UAAUL,UAAY,WAC1B,GAAI6C,QAAQC,MAAOC,OAAQC,KAAMC,MAAOC,MAYxC,KAXAH,UACAG,OAAS,qBACTF,KAAO,MACPH,OAAS,SAASM,GAChB,IACE,MAAOC,oBAAmBD,EAAEhC,QAAQ6B,KAAM,MAC1C,MAAOK,QACP,MAAOF,GAAEhC,QAAQ6B,KAAM,OAG3BC,MAAQK,OAAOC,SAASL,OAAOM,UAAU,GAClCV,MAAQI,OAAOO,KAAKR,QACzBF,OAAOF,OAAOC,MAAM,KAAOD,OAAOC,MAAM,GAE1C,OAAOC,SAeT9E,MAAMoC,UAAUN,gBAAkB,SAAS2D,QACzC,GAAIC,OAAOC,KAGX,OAFAA,OAAQF,OAAOZ,MAAM,QACrBa,MAAQC,MAAM,GAAK,EACZ,GAAIC,MAAKD,MAAM,GAAID,MAAOC,MAAM,GAAIA,MAAM,GAAIA,MAAM,GAAIA,MAAM,KAmBvE3F,MAAMoC,UAAUP,eAAiB,SAASgE,MAIxC,MAHY,OAARA,OACFA,KAAO,IAEFA,KAAKlC,OAAO,GAAGmC,cAAgBD,KAAKnF,MAAM,IAQnDV,MAAMoC,UAAUR,WAAa,SAASiE,MAIpC,MAHY,OAARA,OACFA,KAAO,IAEFlF,KAAKkB,eAAegE,OAe7B7F,MAAMoC,UAAUT,mBAAqB,SAASoE,UAC5C,GAAIC,UAAUC,SAAUJ,IAcxB,OAbgB,OAAZE,WACFA,SAAW,IAEbE,SAAWF,SAASG,cAAcjD,MAAM,KACxC+C,SAAW,WACT,GAAI7B,IAAIC,KAAM+B,QAEd,KADAA,YACKhC,GAAK,EAAGC,KAAO6B,SAASpC,OAAQM,GAAKC,KAAMD,KAC9C0B,KAAOI,SAAS9B,IAChBgC,SAASC,KAAKzF,KAAKkB,eAAegE,MAEpC,OAAOM,WACNE,KAAK1F,MACDqF,SAASlC,KAAK,MAGvB9D,MAAMoC,UAAUV,WAAa,SAAS4B,IAAKgD,KAAMC,YAC/C,GAAIC,WAAWC,UAAWC,UAAWC,gBAAiBC,WAAYlF,UA+BlE,OA9BkB,OAAd6E,aACFA,WAAa,cAEfE,UAA2B,gBAARnD,KAAmBA,IAAMuD,OAAOvD,KACnD5B,YAAsB,MAAR4E,KAAeA,KAAKA,SAAO,KAAWA,KACpDK,gBAAkB,GAAIG,QAAOP,YAC7BG,UAAY,IACZE,WAAa,IACbJ,UAAY,SAASO,WAAYC,UAAWC,OAC1C,GAAIC,GAAGC,iBAAkBC,aAAcC,cAAkBlD,GAAIC,IAE7D,KADA+C,iBAAmBJ,WAAWrG,MAAM,GAC/BwG,EAAI/C,GAAK,EAAGC,KAAO4C,UAAUnD,OAAQM,GAAKC,OACzC4C,UAAUE,GACRC,iBAAiBD,IAAMF,UAAUE,IAFYA,IAAM/C,GAAI,CAO7D,GAFAiD,aAAeJ,UAAUE,KAAOR,YAAc,KAAKY,KAAKH,iBAAiBD,IACzEG,cAAgBL,UAAUE,GAAGpB,gBAAkBc,aAAe,wBAAwBU,KAAKH,iBAAiBD,IACxGE,cAAgBC,cAClB,MAAON,WAET,IAAIE,MAAMK,KAAKN,UAAUE,IAAK,CAC5B,GAAIF,UAAUE,KAAOC,iBAAiBD,GACpC,QAEFC,kBAAiBI,OAAOL,EAAG,EAAGF,UAAUE,KAG5C,MAAOC,mBAEFX,UAAUC,UAAUxD,MAAM,IAAKvB,WAAWuB,MAAM,IAAK0D,iBAAiB7C,KAAK,KAepF9D,MAAMoC,UAAUX,SAAW,SAAS+F,MAClC,GAAIC,WAAWC,QAGf,OAFAD,WAAY,MACZC,SAAW,qCACPF,KACKA,KAAKtE,QAAQuE,UAAWC,UAExBF,MAIXxH,MAAMoC,UAAUZ,WAAa,SAAS8B,KACpC,GAAIqE,OAAOC,MAAOC,YAClB,IAAW,MAAPvE,IAOJ,MAJAuE,cAAe,sCACfF,MAAQ,sCACRC,MAAQ,GAAId,QAAO,IAAMe,aAAe,IAAK,KAC7CvE,KAAO,GACAA,IAAIJ,QAAQ0E,MAAO,SAASnE,MACjC,MAAOkE,OAAMhE,OAAOkE,aAAarD,QAAQf,UAI7CzD,MAAMoC,UAAUb,SAAW,SAAS+B,KAClC,GAAI4B,EAEJ,OADAA,GAAIvE,KAAKa,WAAW8B,IAAIJ,QAAQ,MAAO,KAAKA,QAAQ,SAAU,KAAKA,QAAQ,eAAgB,IAAIgD,cAAchD,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAC7JgC,EAAEvB,OAAO,GAAGmC,cAAgBZ,EAAExE,MAAM,IAe7CV,MAAMoC,UAAUd,gBAAkB,SAASgC,KACzC,MAAOA,KAAIJ,QAAQ,MAAO,MAe5BlD,MAAMoC,UAAUf,KAAO,SAASiC,KAC9B,GAAIG,MAAMqE,SAAUC,OAAQ5D,GAAIC,IAEhC,KADA2D,OAAS,EACJ5D,GAAK,EAAGC,KAAOd,IAAIO,OAAQM,GAAKC,KAAMD,KACzCV,KAAOH,IAAIa,IACX2D,SAAWrE,KAAKuE,WAAW,GAC3BD,QAAWA,QAAU,GAAKA,OAAUD,SACpCC,QAAkBA,MAEpB,OAAOA,SAmBT/H,MAAMoC,UAAUhB,OAAS,SAAS6G,IAAKC,GACrC,GAAIC,GAAGC,KAAMC,CACbD,QACA,KAAKD,IAAKF,KACH1H,UAAU8F,KAAK4B,IAAKE,KACzBE,EAAIJ,IAAIE,GACRC,KAAKD,GAAKD,EAAEC,EAAGE,GAEjB,OAAOD,OAkBTpI,MAAMoC,UAAUjB,WAAa,SAAS8G,IAAKK,OAAQC,QACjD,GAAI5F,KACJ,IAAsH,OAA/F,mBAAX0C,SAAqC,OAAXA,QAAuC,OAApB1C,KAAO0C,OAAOmD,GAAa7F,KAAK8F,WAAkB,IACzG,KAAM,mCAGR,OADAF,QAASA,QAAU,GACZC,EAAEC,OAAOR,IAAK,SAAUS,OAC7B,MAAO,UAASC,OAAQtG,MAAO4B,KAM7B,MALIuE,GAAEI,SAASvG,OACbqG,MAAMvH,WAAWkB,MAAOsG,OAAQJ,OAAStE,IAAM,KAE/C0E,OAAOJ,OAAStE,KAAO5B,MAElBsG,SAERhI,MAAO2H,aAeZtI,MAAMoC,UAAUlB,aAAe,SAAS+G,KACtC,GAAItF,KACJ,IAAsH,OAA/F,mBAAX0C,SAAqC,OAAXA,QAAuC,OAApB1C,KAAO0C,OAAOmD,GAAa7F,KAAK8F,WAAkB,IACzG,KAAM,mCAER,OAAOD,GAAEC,OAAOR,IAAK,SAAUS,OAC7B,MAAO,UAASC,OAAQtG,MAAOwG,MAC7B,GAAIC,SAASC,MAAOC,UAWpB,OAVAF,SAAUH,OACVK,WAAaH,KAAK5F,MAAM,KACxB8F,MAAQC,WAAWnF,OAAS,EAC5B2E,EAAES,KAAKD,WAAY,SAAS/E,IAAKiF,OAC/B,MACSJ,SAAUA,QAAQ7E,KADvBiF,QAAUH,MACoB1G,MAEAyG,QAAQ7E,WAGrC0E,gBAkBb3I,MAAMoC,UAAU+G,OAAS,SAAS7F,IAAKyF,MAAOK,SAC5C,OAAQA,QAAU9F,KAAKL,MAAM,IAAIoG,UAAU3I,MAAM,EAAGqI,OAAOM,UAAUvF,KAAK,KAc5E9D,MAAMoC,UAAUkH,WAAa,SAASC,MAIpC,MAHoB,gBAATA,QACTA,KAAO,GAAI3D,MAAK2D,OAEL5I,KAAKwI,OAAOI,KAAKC,UAAW,EAAG,MAAS,IAAO7I,KAAKwI,OAAOI,KAAKE,WAAa,EAAG,EAAG,MAAS,IAAOF,KAAKG,eAcvH1J,MAAMoC,UAAUuH,aAAe,SAASJ,MAItC,MAHoB,gBAATA,QACTA,KAAO,GAAI3D,MAAK2D,OAELA,KAAKE,WAAa,EAAK,IAAO9I,KAAKwI,OAAOI,KAAKC,UAAW,EAAG,MAAS,IAAOD,KAAKG,eAGjG1J,MAAMoC,UAAUnB,aAAe,WAC7B,GAAI0B,MAAMiH,KACV,QAAgC,OAAvBjH,KAAO0C,OAAOwE,OAAuC,OAAtBD,MAAQjH,KAAKmH,OAA6C,kBAAtBF,OAAMG,YAA6BH,MAAMG,kBAAkC,KAAW,OAGpK/J,MAAMoC,UAAUpB,uBAAyB,WACvC,GAAIqC,oBAAoBV,KAAMiH,MAAOI,MAAOC,KAC5C,OAA4B,QAAvBtH,KAAO0C,OAAOwE,OAAuC,OAAtBD,MAAQjH,KAAKmH,QAAgBF,MAAMM,wBAE3C,OAD1B7G,mBAA8C,OAAxB2G,MAAQ3E,OAAOwE,OAAwC,OAAvBI,MAAQD,MAAMF,MAAgBG,MAAMC,4BAAmC,KAEpH7G,qBASbrD,MAAMoC,UAAUrB,qBAAuB,WACrC,GAAI4B,MAAMiH,KACV,QAAgC,OAAvBjH,KAAO0C,OAAOwE,OAAuC,OAAtBD,MAAQjH,KAAKmH,OAAqD,kBAA9BF,OAAMO,oBAAqCP,MAAMO,0BAA0C,KAAW,KAGpLnK,MAAMoC,UAAUtB,uBAAyB,WACvC,GAAI6B,MAAMiH,KACV,QAAgC,OAAvBjH,KAAO0C,OAAOwE,OAAuC,OAAtBD,MAAQjH,KAAKmH,OAAuD,kBAAhCF,OAAMQ,sBAAuCR,MAAMQ,4BAA4C,KAAW,KAGxLpK,MAAMoC,UAAUvB,kBAAoB,WAClC,GAAI8B,MAAMiH,MAAOI,MAAOC,KACxB,OAA+G,QAAlF,OAAvBtH,KAAO0C,OAAOwE,OAAuC,OAAtBD,MAAQjH,KAAKmH,MAAgBF,MAAMS,qBAA4B,IAClE,OAAxBL,MAAQ3E,OAAOwE,OAAwC,OAAvBI,MAAQD,MAAMF,MAAgBG,MAAMI,uBAA8B,GAEnG,GAIXrK,MAAMoC,UAAUxB,QAAU,WACxB,GAAIqH,KAAKqC,KAAMC,OAAQC,QAASrG,GAAIC,IAEpC,KADA6D,IAAM3H,UAAU,GAAIkK,QAAU,GAAKlK,UAAUuD,OAASpD,QAAQ4F,KAAK/F,UAAW,MACzE6D,GAAK,EAAGC,KAAOoG,QAAQ3G,OAAQM,GAAKC,KAAMD,KAE7C,GADAoG,OAASC,QAAQrG,IAEf,IAAKmG,OAAQC,QACXtC,IAAIqC,MAAQC,OAAOD,KAIzB,OAAOrC,MAGFjI,SAITC,MAAQ,GAAID,OAEI,MAAZqF,OAAOmD,EACa,MAAlBnD,OAAOmD,EAAEiC,MACXpF,OAAOmD,EAAEiC,MAAMxK,OAEfA,MAAMW,QAAQyE,OAAOmD,EAAGvI,QAG1BoF,OAAOmD,EAAIvI,MACXoF,OAAOmD,EAAEkC,OAASzK,MAAMW,WAGzByF,KAAK1F","file":"underscore-extensions.js","sourcesContent":["(function() {\n  var Utils, utils,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __slice = [].slice;\n\n  Utils = (function() {\n    function Utils() {\n      this._extend = __bind(this._extend, this);\n      this._getDecimalDigits = __bind(this._getDecimalDigits, this);\n      this._getThousandsSeparator = __bind(this._getThousandsSeparator, this);\n      this._getDecimalSeparator = __bind(this._getDecimalSeparator, this);\n      this._getStartsWithCurrency = __bind(this._getStartsWithCurrency, this);\n      this._getCurrency = __bind(this._getCurrency, this);\n      this.unFlattenObj = __bind(this.unFlattenObj, this);\n      this.flattenObj = __bind(this.flattenObj, this);\n      this.mapObj = __bind(this.mapObj, this);\n      this.hash = __bind(this.hash, this);\n      this.spacesToHyphens = __bind(this.spacesToHyphens, this);\n      this.sanitize = __bind(this.sanitize, this);\n      this.plainChars = __bind(this.plainChars, this);\n      this.maskInfo = __bind(this.maskInfo, this);\n      this.maskString = __bind(this.maskString, this);\n      this.capitalizeSentence = __bind(this.capitalizeSentence, this);\n      this.capitalize = __bind(this.capitalize, this);\n      this.capitalizeWord = __bind(this.capitalizeWord, this);\n      this.dateFromISO8601 = __bind(this.dateFromISO8601, this);\n      this.urlParams = __bind(this.urlParams, this);\n      this.getCookieValue = __bind(this.getCookieValue, this);\n      this.readCookie = __bind(this.readCookie, this);\n      this.pad = __bind(this.pad, this);\n      this.formatCurrency = __bind(this.formatCurrency, this);\n    }\n\n\n    /*\n    Formats monetary value as a string with decimal and thousands separators\n    \n    @param [Number] value the value to format\n    @param [Object] options\n    @option options [String] decimalSeparator the character used to separate the decimal and integer parts. Default: ','\n    @option options [String] thousandsSeparator the character used to separate the thousands. Default: '.'\n    @option options [Boolean] absolute whether to use an absolute value or not. Default: false\n    @option options [Integer] decimalPlaces the number of decimal places to use. Default: 2\n    @return [String] the value formatted according to the options given\n    \n    @example Default usage\n      formatCurrency(1050)\n       *=> '1.050,00'\n    \n    @example Usage with options\n      formatCurrency(-1050.99, {'decimalSeparator': '.', 'thousandsSeparator': ',', 'absolute': true, 'decimalPlaces': 3}\n       *=> '1,050.990'\n     */\n\n    Utils.prototype.formatCurrency = function(value, options) {\n      var decimalPart, defaults, opts, wholePart, _ref;\n      defaults = {\n        decimalSeparator: this._getDecimalSeparator(),\n        thousandsSeparator: this._getThousandsSeparator(),\n        absolute: false,\n        decimalPlaces: this._getDecimalDigits()\n      };\n      opts = this._extend(defaults, options);\n      if (opts.absolute && value < 0) {\n        value = -value;\n      }\n      value = value.toFixed(opts.decimalPlaces);\n      _ref = value.split('.'), wholePart = _ref[0], decimalPart = _ref[1];\n      wholePart = wholePart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, opts.thousandsSeparator);\n      if (opts.decimalPlaces > 0) {\n        return wholePart + opts.decimalSeparator + decimalPart;\n      } else {\n        return wholePart;\n      }\n    };\n\n    Utils.prototype.intAsCurrency = function(value, options) {\n      var currencySymbol, startsWithCurrency;\n      currencySymbol = options && options.currencySymbol ? options.currencySymbol : this._getCurrency();\n      startsWithCurrency = options && options.currencySymbol ? options.currencySymbol : this._getStartsWithCurrency();\n      if (startsWithCurrency) {\n        return currencySymbol + this.formatCurrency(value / 100, options);\n      }\n      return this.formatCurrency(value / 100, options) + ' ' + currencySymbol;\n    };\n\n\n    /*\n    Pads a string until it reaches a certain length. Non-strings will be converted.\n    \n    @param [String] str the string to be padded. Any other type will be converted to string\n    @param [Integer] max the length desired\n    @param [Object] options\n    @option options [String] char the character used to pad the string. Default: '0'\n    @option options [String] position where to pad. Valid: 'left', 'right'. Default: 'left'\n    @return [String] the string padded according to the options given\n    \n    @example Default usage\n      pad('19,99', 6)\n       *=> '019,99'\n    \n    @example Usage with options\n      pad('Hello', 7, {'char': ' ', 'position': 'right'})\n       *=> 'Hello  '\n     */\n\n    Utils.prototype.pad = function(str, max, options) {\n      var defaults, opts, toadd;\n      defaults = {\n        char: '0',\n        position: 'left'\n      };\n      opts = this._extend(defaults, options);\n      opts.char = opts.char.charAt(0);\n      str = str + '';\n      toadd = Array(max - str.length + 1).join(opts.char);\n      if (opts.position === 'right') {\n        return str + toadd;\n      } else {\n        return toadd + str;\n      }\n    };\n\n\n    /*\n    Returns the content of the cooke with the given name\n    \n    @param [String] name the name of the cookie to be read\n    @return [String] the content of the cookie with the given name\n    \n    @example Default usage\n       * Assuming document.cookie is 'a=123; b=xyz'\n      readCookie(a)\n       *=> '123'\n      readCookie(b)\n       *=> 'xyz'\n     */\n\n    Utils.prototype.readCookie = function(name) {\n      var ARRcookies, key, pair, value, _i, _len;\n      ARRcookies = document.cookie.split(\";\");\n      for (_i = 0, _len = ARRcookies.length; _i < _len; _i++) {\n        pair = ARRcookies[_i];\n        key = pair.substr(0, pair.indexOf(\"=\")).replace(/^\\s+|\\s+$/g, \"\");\n        value = pair.substr(pair.indexOf(\"=\") + 1);\n        if (key === name) {\n          return unescape(value);\n        }\n      }\n    };\n\n\n    /*\n    Receives a cookie that has \"subcookies\" in the format a=b&c=d\n    Returns the content of the \"subcookie\" with the given name\n    \n    @param [String] cookie a string with \"subcookies\" in the format 'a=b&c=d'\n    @param [String] name the name of the \"subcookie\" to get the value of\n    @return [String] the content of the \"subcookie\" with the given name\n    \n    @example Get subcookies\n      c = readCookie('sub')\n       *=> 'a=b&c=d'\n      getCookieValue(c, 'a')\n       *=> 'b'\n      getCookieValue(c, 'c')\n       *=> 'd'\n     */\n\n    Utils.prototype.getCookieValue = function(cookie, name) {\n      var key, subcookie, subcookies, value, _i, _len;\n      subcookies = cookie.split(\"&\");\n      for (_i = 0, _len = subcookies.length; _i < _len; _i++) {\n        subcookie = subcookies[_i];\n        key = subcookie.substr(0, subcookie.indexOf(\"=\"));\n        value = subcookie.substr(subcookie.indexOf(\"=\") + 1);\n        if (key === name) {\n          return unescape(value);\n        }\n      }\n    };\n\n\n    /*\n    Parses the querystring and returns its object representation.\n    It decodes URI components (such as %3D to =) and replaces + with space.\n    \n    @return [Object] an object representation of the querystring parameters\n    \n    @example\n       * URL is http://google.com/?a=b&c=hello+%3D+hi\n      urlParam()\n       *=> {'a': 'b', 'c': 'hello = hi'}\n     */\n\n    Utils.prototype.urlParams = function() {\n      var decode, match, params, plus, query, search;\n      params = {};\n      search = /([^&=]+)=?([^&]*)/g;\n      plus = /\\+/g;\n      decode = function(s) {\n        try {\n          return decodeURIComponent(s.replace(plus, \" \"));\n        } catch (_error) {\n          return s.replace(plus, \" \");\n        }\n      };\n      query = window.location.search.substring(1);\n      while (match = search.exec(query)) {\n        params[decode(match[1])] = decode(match[2]);\n      }\n      return params;\n    };\n\n\n    /*\n    Transforms a ISO8061 compliant date string into a Date object\n    \n    @param [String] isostr a string in the format YYYY-MM-DDThh:mm:ss\n    @return [Date] a Date object created from the date information in the string\n    \n    @example Default usage\n      dateFromISO8601('1997-07-16T19:20:30')\n       *=> Date object (\"Thu Jul 18 2013 15:08:08 GMT-0300 (BRT)\")\n     */\n\n    Utils.prototype.dateFromISO8601 = function(isostr) {\n      var part1, parts;\n      parts = isostr.match(/\\d+/g);\n      part1 = parts[1] - 1;\n      return new Date(parts[0], part1, parts[2], parts[3], parts[4], parts[5]);\n    };\n\n\n    /*\n    Capitalizes the first character of a given string.\n    \n    @param [String] word the word to be capitalized\n    @return [String] the capitalized word\n    \n    @example Default usage\n      capitalizeWord('hello')\n       *=> 'Hello'\n    \n    @example It only capitalizes the first character\n      capitalizeWord(' hi ')\n       *=> ' hi '\n     */\n\n    Utils.prototype.capitalizeWord = function(word) {\n      if (word == null) {\n        word = '';\n      }\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    };\n\n\n    /*\n    @see {Utils#capitalizeWord}.\n     */\n\n    Utils.prototype.capitalize = function(word) {\n      if (word == null) {\n        word = '';\n      }\n      return this.capitalizeWord(word);\n    };\n\n\n    /*\n    Capitalizes each word in a given sentende.\n    \n    @param [String] sentence the sentence to be capitalized\n    @return [String] the capitalized sentence\n    \n    @example Default usage\n      capitalizeSentence('* hello world!')\n       *=> '* Hello Wordl!'\n     */\n\n    Utils.prototype.capitalizeSentence = function(sentence) {\n      var newWords, oldWords, word;\n      if (sentence == null) {\n        sentence = '';\n      }\n      oldWords = sentence.toLowerCase().split(' ');\n      newWords = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = oldWords.length; _i < _len; _i++) {\n          word = oldWords[_i];\n          _results.push(this.capitalizeWord(word));\n        }\n        return _results;\n      }).call(this);\n      return newWords.join(' ');\n    };\n\n    Utils.prototype.maskString = function(str, mask, fixedChars) {\n      var applyMask, argString, digitMask, fixedCharsRegex, letterMask, maskString;\n      if (fixedChars == null) {\n        fixedChars = '[(),.:/ -]';\n      }\n      argString = typeof str === \"string\" ? str : String(str);\n      maskString = (mask != null ? mask.mask : void 0) || mask;\n      fixedCharsRegex = new RegExp(fixedChars);\n      digitMask = '9';\n      letterMask = 'A';\n      applyMask = function(valueArray, maskArray, fixed) {\n        var i, maskedValueArray, noMatchDigit, noMatchLetter, v, _i, _len;\n        maskedValueArray = valueArray.slice(0);\n        for (i = _i = 0, _len = maskArray.length; _i < _len; i = ++_i) {\n          v = maskArray[i];\n          if (!(maskedValueArray[i] && maskArray[i])) {\n            break;\n          }\n          noMatchDigit = maskArray[i] === digitMask && !/\\d/.test(maskedValueArray[i]);\n          noMatchLetter = maskArray[i].toUpperCase() === letterMask && !/[a-zA-Z\\u00C0-\\u017F]/.test(maskedValueArray[i]);\n          if (noMatchDigit || noMatchLetter) {\n            return valueArray;\n          }\n          if (fixed.test(maskArray[i])) {\n            if (maskArray[i] === maskedValueArray[i]) {\n              continue;\n            }\n            maskedValueArray.splice(i, 0, maskArray[i]);\n          }\n        }\n        return maskedValueArray;\n      };\n      return applyMask(argString.split(\"\"), maskString.split(\"\"), fixedCharsRegex).join(\"\");\n    };\n\n\n    /*\n    Substitutes each * in a string with span.masked-info *\n    \n    @param [String] info the string to mask\n    @return [String] the masked string\n    \n    @example Default usage\n      maskInfo('abc**')\n       *=> 'abc<span class=\"masked-info\">*</span><span class=\"masked-info\">*</span>'\n     */\n\n    Utils.prototype.maskInfo = function(info) {\n      var maskRegex, maskText;\n      maskRegex = /\\*/g;\n      maskText = '<span class=\"masked-info\">*</span>';\n      if (info) {\n        return info.replace(maskRegex, maskText);\n      } else {\n        return info;\n      }\n    };\n\n    Utils.prototype.plainChars = function(str) {\n      var plain, regex, specialChars;\n      if (str == null) {\n        return;\n      }\n      specialChars = \"ąàáäâãåæćęèéëêìíïîłńòóöôõøśùúüûñçżź\";\n      plain = \"aaaaaaaaceeeeeiiiilnoooooosuuuunczz\";\n      regex = new RegExp(\"[\" + specialChars + \"]\", 'g');\n      str += \"\";\n      return str.replace(regex, function(char) {\n        return plain.charAt(specialChars.indexOf(char));\n      });\n    };\n\n    Utils.prototype.sanitize = function(str) {\n      var s;\n      s = this.plainChars(str.replace(/\\s/g, '')).replace(/\\/|\\\\/g, '-').replace(/\\(|\\)|\\'|\\\"/g, '').toLowerCase().replace(/\\,/g, 'V').replace(/\\./g, 'P').replace(/\\:/g, 'D');\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n\n    /*\n    Replaces all space charactes with hyphen characters\n    \n    @param [String] str the string\n    @return [Stirng] the string with all space characters replaced with hyphen characters\n    \n    @example\n      spacesToHyphens(\"Branco e Preto\")\n       *=> \"Branco-e-Preto\"\n     */\n\n    Utils.prototype.spacesToHyphens = function(str) {\n      return str.replace(/\\ /g, '-');\n    };\n\n\n    /*\n    Creates a (mostly) unique hashcode from a string\n    \n    @param [String] str the string\n    @return [Number] the created hashcode\n    \n    @example Typical usage is to give an object a unique ID\n      uid = hash(Date.now())\n       *=> -707575924\n     */\n\n    Utils.prototype.hash = function(str) {\n      var char, charcode, hashed, _i, _len;\n      hashed = 0;\n      for (_i = 0, _len = str.length; _i < _len; _i++) {\n        char = str[_i];\n        charcode = char.charCodeAt(0);\n        hashed = ((hashed << 5) - hashed) + charcode;\n        hashed = hashed & hashed;\n      }\n      return hashed;\n    };\n\n\n    /*\n    Produces a new object mapping each key:value pair to a key:f(value) pair.\n    \n    @param [Object] obj the object\n    @param [Function] f a function that will receive (key, value) and should return a replacement value\n    @return [Object] a new object with each value mapped according to the function\n    \n    @example\n      obj = {a: 1, b: 2};\n      mapObj(obj, function(key, value){\n        return value*10\n      });\n       *=> {a: 10, b: 20}\n     */\n\n    Utils.prototype.mapObj = function(obj, f) {\n      var k, obj2, v;\n      obj2 = {};\n      for (k in obj) {\n        if (!__hasProp.call(obj, k)) continue;\n        v = obj[k];\n        obj2[k] = f(k, v);\n      }\n      return obj2;\n    };\n\n\n    /*\n    Produces a new flattened object\n    \n    @param [Object] obj the object\n    @param [Object] target (optional) object\n    @param [String] prefix (optional)\n    @return [Object] flattened object\n    \n    @example\n      obj = {attr: {address: {street: 'Wall'}}};\n      flattenObj(obj)\n       *=> { 'attr.address.street': 'Wall' }\n     */\n\n    Utils.prototype.flattenObj = function(obj, target, prefix) {\n      var _ref;\n      if ((typeof window !== \"undefined\" && window !== null ? (_ref = window._) != null ? _ref.reduce : void 0 : void 0) == null) {\n        throw \"This function requires Underscore\";\n      }\n      prefix = prefix || '';\n      return _.reduce(obj, (function(_this) {\n        return function(result, value, key) {\n          if (_.isObject(value)) {\n            _this.flattenObj(value, result, prefix + key + '.');\n          } else {\n            result[prefix + key] = value;\n          }\n          return result;\n        };\n      })(this), target || {});\n    };\n\n\n    /*\n    Produces a new un-flattened object\n    \n    @param [Object] obj the object\n    \n    @example\n      obj = { 'attr.address.street': 'Wall' }\n      unFlattenObj(obj)\n       *=> {attr: {address: {street: 'Wall'}}};\n     */\n\n    Utils.prototype.unFlattenObj = function(obj) {\n      var _ref;\n      if ((typeof window !== \"undefined\" && window !== null ? (_ref = window._) != null ? _ref.reduce : void 0 : void 0) == null) {\n        throw \"This function requires Underscore\";\n      }\n      return _.reduce(obj, (function(_this) {\n        return function(result, value, keys) {\n          var current, limit, partitions;\n          current = result;\n          partitions = keys.split('.');\n          limit = partitions.length - 1;\n          _.each(partitions, function(key, index) {\n            if (index === limit) {\n              return current = current[key] = value;\n            } else {\n              return current = current[key] = current[key] || {};\n            }\n          });\n          return result;\n        };\n      })(this), {});\n    };\n\n\n    /*\n    Padding left\n    \n    @param [String] string to insert padding\n    @param [Number] limit\n    @param [String] padding characters\n    \n    @example\n      padStr('1', 2, '00')\n       *=> '01';\n     */\n\n    Utils.prototype.padStr = function(str, limit, padding) {\n      return (padding + str).split('').reverse().slice(0, limit).reverse().join('');\n    };\n\n\n    /*\n    Format date as DD/MM/YYYY\n    \n    @param [Date|String] date\n    \n    @example\n      dateFormat('2014/01/23')\n       *=> 23/01/2014;\n     */\n\n    Utils.prototype.dateFormat = function(date) {\n      if (typeof date === 'string') {\n        date = new Date(date);\n      }\n      return \"\" + (this.padStr(date.getDate(), 2, '00')) + \"/\" + (this.padStr(date.getMonth() + 1, 2, '00')) + \"/\" + (date.getFullYear());\n    };\n\n\n    /*\n    Format date as M/DD/YYYY\n    \n    @param [Date|String] date\n    \n    @example\n      dateFormatUS('2014/01/23')\n       *=> 1/23/2014;\n     */\n\n    Utils.prototype.dateFormatUS = function(date) {\n      if (typeof date === 'string') {\n        date = new Date(date);\n      }\n      return \"\" + (date.getMonth() + 1) + \"/\" + (this.padStr(date.getDate(), 2, '00')) + \"/\" + (date.getFullYear());\n    };\n\n    Utils.prototype._getCurrency = function() {\n      var _ref, _ref1;\n      return ((_ref = window.vtex) != null ? (_ref1 = _ref.i18n) != null ? typeof _ref1.getCurrency === \"function\" ? _ref1.getCurrency() : void 0 : void 0 : void 0) || 'R$ ';\n    };\n\n    Utils.prototype._getStartsWithCurrency = function() {\n      var startsWithCurrency, _ref, _ref1, _ref2, _ref3;\n      if ((_ref = window.vtex) != null ? (_ref1 = _ref.i18n) != null ? _ref1.getStartsWithCurrency : void 0 : void 0) {\n        startsWithCurrency = (_ref2 = window.vtex) != null ? (_ref3 = _ref2.i18n) != null ? _ref3.getStartsWithCurrency() : void 0 : void 0;\n        if (startsWithCurrency != null) {\n          return startsWithCurrency;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    };\n\n    Utils.prototype._getDecimalSeparator = function() {\n      var _ref, _ref1;\n      return ((_ref = window.vtex) != null ? (_ref1 = _ref.i18n) != null ? typeof _ref1.getDecimalSeparator === \"function\" ? _ref1.getDecimalSeparator() : void 0 : void 0 : void 0) || ',';\n    };\n\n    Utils.prototype._getThousandsSeparator = function() {\n      var _ref, _ref1;\n      return ((_ref = window.vtex) != null ? (_ref1 = _ref.i18n) != null ? typeof _ref1.getThousandsSeparator === \"function\" ? _ref1.getThousandsSeparator() : void 0 : void 0 : void 0) || '.';\n    };\n\n    Utils.prototype._getDecimalDigits = function() {\n      var _ref, _ref1, _ref2, _ref3;\n      if (((_ref = window.vtex) != null ? (_ref1 = _ref.i18n) != null ? _ref1.getDecimalDigits : void 0 : void 0) != null) {\n        return (_ref2 = window.vtex) != null ? (_ref3 = _ref2.i18n) != null ? _ref3.getDecimalDigits() : void 0 : void 0;\n      } else {\n        return 2;\n      }\n    };\n\n    Utils.prototype._extend = function() {\n      var obj, prop, source, sources, _i, _len;\n      obj = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = sources.length; _i < _len; _i++) {\n        source = sources[_i];\n        if (source) {\n          for (prop in source) {\n            obj[prop] = source[prop];\n          }\n        }\n      }\n      return obj;\n    };\n\n    return Utils;\n\n  })();\n\n  utils = new Utils();\n\n  if (window._ != null) {\n    if (window._.mixin != null) {\n      window._.mixin(utils);\n    } else {\n      utils._extend(window._, utils);\n    }\n  } else {\n    window._ = utils;\n    window._.extend = utils._extend;\n  }\n\n}).call(this);\n"]}